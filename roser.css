"use strict";

const $ = id => document.getElementById(id);
const tabsEl = $("tabs");
const viewArea = $("viewArea");
const addressInput = $("address");
const status = $("status");
const backBtn = $("backBtn");
const forwardBtn = $("forwardBtn");
const reloadBtn = $("reloadBtn");
const newTabBtn = $("newTabBtn");
const goBtn = $("goBtn");
const bookmarkBtn = $("bookmarkBtn");
const bookmarksSelect = $("bookmarks");

let tabs = [];
let tabIdCounter = 0;
let bookmarks = JSON.parse(localStorage.getItem("roser_bookmarks") || "[]");

function setStatus(text, isError = false) {
  status.textContent = text;
  status.style.color = isError ? "#ff8080" : "#9aa0a6";
}

// ===============================
// URL xử lý
// ===============================
function normalizeUrl(input) {
  input = (input || "").trim();
  if (!input) return null;

  const looksLikeUrl = /^[a-z0-9-]+\.[a-z]{2,}/i.test(input) || /^[a-z]+:\/\//i.test(input);
  if (!looksLikeUrl) return "https://www.google.com/search?q=" + encodeURIComponent(input);

  if (!/^[a-z]+:\/\//i.test(input)) input = "https://" + input;

  // ✅ Hỗ trợ đặc biệt cho 1.1.1.1://
  input = input.replace(/^1\.1\.1\.1:\/\//i, "https://");

  if (input.toLowerCase().startsWith("javascript:")) return null;
  return input;
}

// ===============================
// Tabs
// ===============================
function createTab(url, makeActive = true) {
  const id = "tab-" + (++tabIdCounter);
  const tab = {
    id,
    history: [],
    historyIndex: -1,
    url: null,
    iframe: null,
    el: null,
  };

  const tabBtn = document.createElement("div");
  tabBtn.className = "tab";
  tabBtn.id = id;
  tabBtn.innerHTML = `<span class="title">New tab</span><span class="close">✕</span>`;
  tabsEl.appendChild(tabBtn);

  tabBtn.addEventListener("click", (ev) => {
    if (ev.target.classList.contains("close")) {
      closeTab(id);
      return;
    }
    activateTab(id);
  });

  const iframe = document.createElement("iframe");
  iframe.setAttribute("sandbox", "allow-forms allow-modals allow-popups allow-same-origin allow-scripts");
  iframe.style.display = "none";
  viewArea.appendChild(iframe);

  tab.iframe = iframe;
  tab.el = tabBtn;
  tabs.push(tab);

  if (url) navigateTab(tab.id, url);
  if (makeActive) activateTab(id);
  return tab;
}

function activateTab(id) {
  tabs.forEach(t => {
    if (t.el) t.el.classList.remove("active");
    if (t.iframe) t.iframe.style.display = "none";
  });
  const tab = tabs.find(t => t.id === id);
  if (!tab) return;
  tab.el.classList.add("active");
  tab.iframe.style.display = "block";
  addressInput.value = tab.url || "";
  updateNavButtons(tab);
}

function closeTab(id) {
  const idx = tabs.findIndex(t => t.id === id);
  if (idx === -1) return;
  const tab = tabs[idx];
  if (tab.el) tab.el.remove();
  if (tab.iframe) tab.iframe.remove();
  tabs.splice(idx, 1);
  if (tabs.length) activateTab(tabs[Math.max(0, idx - 1)].id);
  else createTab("https://example.com");
}

// ===============================
// Điều hướng (Go/Back/Forward)
// ===============================
function navigateTab(id, rawInput) {
  const tab = tabs.find(t => t.id === id);
  if (!tab) return;

  const url = normalizeUrl(rawInput);
  if (!url) {
    setStatus("URL không hợp lệ hoặc bị chặn.", true);
    return;
  }

  if (tab.historyIndex < tab.history.length - 1)
    tab.history = tab.history.slice(0, tab.historyIndex + 1);

  tab.history.push(url);
  tab.historyIndex = tab.history.length - 1;
  tab.url = url;

  loadUrlToIframe(tab, url);
  renderTabTitle(tab, url);
  updateNavButtons(tab);
  setStatus("Đang tải: " + url);
}

function loadUrlToIframe(tab, url) {
  const ifr = tab.iframe;
  ifr.style.display = "block";
  ifr.src = url;

  let done = false;
  const timeout = setTimeout(() => {
    if (done) return;
    showBlockedFallback(tab, url);
    done = true;
  }, 2500);

  ifr.onload = () => {
    if (done) return;
    clearTimeout(timeout);
    done = true;
    setStatus("Đã tải: " + url);
  };

  ifr.onerror = () => {
    if (done) return;
    clearTimeout(timeout);
    done = true;
    setStatus("Không thể tải trang này.", true);
    showBlockedFallback(tab, url);
  };
}

function showBlockedFallback(tab, url) {
  const overlay = document.createElement("div");
  overlay.className = "blocked-overlay";
  overlay.innerHTML = `
    <div class="box" style="background:#111;padding:20px;border-radius:10px;color:#fff;text-align:center;">
      <div style="margin-bottom:10px;">Trang không cho nhúng: <b>${url}</b></div>
      <button id="openNew">Mở ngoài</button>
    </div>`;
  overlay.style.position = "absolute";
  overlay.style.inset = "0";
  overlay.style.display = "flex";
  overlay.style.alignItems = "center";
  overlay.style.justifyContent = "center";
  overlay.style.background = "rgba(0,0,0,0.7)";
  tab.iframe.after(overlay);

  overlay.querySelector("#openNew").onclick = () => {
    window.open(url, "_blank");
  };
}

function updateNavButtons(tab) {
  backBtn.disabled = !(tab.historyIndex > 0);
  forwardBtn.disabled = !(tab.historyIndex < tab.history.length - 1);
}

backBtn.onclick = () => {
  const tab = activeTab();
  if (!tab || tab.historyIndex <= 0) return;
  tab.historyIndex--;
  tab.url = tab.history[tab.historyIndex];
  tab.iframe.src = tab.url;
  addressInput.value = tab.url;
  updateNavButtons(tab);
};

forwardBtn.onclick = () => {
  const tab = activeTab();
  if (!tab || tab.historyIndex >= tab.history.length - 1) return;
  tab.historyIndex++;
  tab.url = tab.history[tab.historyIndex];
  tab.iframe.src = tab.url;
  addressInput.value = tab.url;
  updateNavButtons(tab);
};

reloadBtn.onclick = () => {
  const tab = activeTab();
  if (tab && tab.url) {
    tab.iframe.src = tab.url;
    setStatus("Đang tải lại: " + tab.url);
  }
};

newTabBtn.onclick = () => {
  createTab("https://example.com");
};

// ===============================
// Bookmark (lưu địa chỉ nhanh)
// ===============================
bookmarkBtn.onclick = () => {
  const tab = activeTab();
  if (!tab || !tab.url) return;
  if (!bookmarks.includes(tab.url)) {
    bookmarks.push(tab.url);
    localStorage.setItem("roser_bookmarks", JSON.stringify(bookmarks));
    refreshBookmarks();
    setStatus("Đã lưu bookmark!");
  }
};

function refreshBookmarks() {
  bookmarksSelect.innerHTML = bookmarks.map(u => `<option>${u}</option>`).join("");
}
bookmarksSelect.onchange = () => {
  const val = bookmarksSelect.value;
  if (val) navigateTab(activeTab().id, val);
};

// ===============================
// Hành vi nút GO và phím Enter
// ===============================
goBtn.onclick = () => {
  const tab = activeTab();
  if (tab) navigateTab(tab.id, addressInput.value);
};

addressInput.addEventListener("keydown", (ev) => {
  if (ev.key === "Enter") {
    const tab = activeTab();
    if (tab) navigateTab(tab.id, addressInput.value);
  }
});

// ===============================
// Helper
// ===============================
function activeTab() {
  return tabs.find(t => t.el.classList.contains("active"));
}

function renderTabTitle(tab, url) {
  const t = tab.el.querySelector(".title");
  t.textContent = url.length > 30 ? url.slice(0, 30) + "..." : url;
}

// khởi tạo
createTab("https://example.com");
refreshBookmarks();
setStatus("Roser sẵn sàng — nhập URL rồi nhấn Go hoặc Enter.");
